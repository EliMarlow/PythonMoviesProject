"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createIdentityFixtureInAccount = void 0;
var IdentityPublicKey_1 = __importDefault(require("@dashevo/dpp/lib/identity/IdentityPublicKey"));
// @ts-ignore
var getIdentityFixture = require('@dashevo/dpp/lib/test/fixtures/getIdentityFixture');
function createIdentityFixtureInAccount(account) {
    var identityFixture = getIdentityFixture();
    var identityFixtureIndex = 0;
    var identityMasterPrivateKey = account.identities.getIdentityHDKeyByIndex(identityFixtureIndex, 0).privateKey;
    var identitySecondPrivateKey = account.identities.getIdentityHDKeyByIndex(identityFixtureIndex, 1).privateKey;
    identityFixture.publicKeys[0] = new IdentityPublicKey_1.default({
        id: 0,
        type: IdentityPublicKey_1.default.TYPES.ECDSA_SECP256K1,
        data: identityMasterPrivateKey.toPublicKey().toBuffer(),
        purpose: IdentityPublicKey_1.default.PURPOSES.AUTHENTICATION,
        securityLevel: IdentityPublicKey_1.default.SECURITY_LEVELS.MASTER,
        readOnly: false,
    });
    identityFixture.publicKeys[1] = new IdentityPublicKey_1.default({
        id: 1,
        type: IdentityPublicKey_1.default.TYPES.ECDSA_SECP256K1,
        data: identitySecondPrivateKey.toPublicKey().toBuffer(),
        purpose: IdentityPublicKey_1.default.PURPOSES.AUTHENTICATION,
        securityLevel: IdentityPublicKey_1.default.SECURITY_LEVELS.HIGH,
        readOnly: false,
    });
    account.storage
        .getWalletStore(account.walletId)
        .insertIdentityIdAtIndex(identityFixture.getId().toString(), identityFixtureIndex);
    return identityFixture;
}
exports.createIdentityFixtureInAccount = createIdentityFixtureInAccount;
//# sourceMappingURL=createIdentityFixtureInAccount.js.map