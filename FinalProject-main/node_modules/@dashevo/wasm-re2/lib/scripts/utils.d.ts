export declare const errorHandler: (value: unknown, message: string) => void;
export declare const freeUpMemory: (re2: RegExp2, ...ptrs: Pointer[]) => void;
export declare const stringOnWasmHeap: (re2: RegExp2) => (string: string) => Pointer;
export declare const getPointers: (re2: RegExp2, ...values: string[]) => Pointer[];
export declare const getStringArray: (re2: RegExp2, arrayPointer: Pointer, getCountOfGroups: number, captureGroups: number) => string[][];
export declare const validate: (re2: RegExp2, regex: string) => void;
export declare const isHexadecimal: (char: string) => boolean;
/**
 * Translate a string from Node RegExp syntax RE2 syntax. The algorithm is
 * translated from
 * https://github.com/uhop/node-re2/blob/master/lib/new.cc#L21-L142
 * @param pattern
 * @param multiline
 */
export declare const translateRegExp: (pattern: string, multiline: boolean) => string;
/**
 * Escape a RegExp pattern by ensuring that any instance of "/" in the string
 * is preceded by an odd number of backslashes.
 * @param pattern
 */
export declare const escapeRegExp: (pattern: string) => string;
